////
/// Global mixins
/// @group Globals
/// @author Eric Taylor
////


/// Create media query above horizontal breakpoint
/// ---
/// @require {variable} $breakpoints - Breakpoints variable map
/// @param {String} $breakpoint - Horizontal breakpoint
/// ---
/// @example scss - Usage
///   selector {
///     @include mq("$breakpoint") {
///       property: value;
///     }
///   }

@mixin mq($breakpoint) {
  @if $breakpoint == sm {
    @media screen and (min-width: map-get($breakpoints, sm)) { @content; }
  } @else if $breakpoint == med {
    @media (min-width: map-get($breakpoints, med)) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: map-get($breakpoints, lg)) { @content; }
  }
}


/// Create media query between horizontal breakpoints
/// ---
/// @require {variable} $breakpoints - Breakpoints variable map
/// @param {String} $breakpoint - Horizontal breakpoint
/// ---
/// @example scss - Usage
///   selector {
///     @include mq-between("$breakpoint") {
///       property: value;
///     }
///   }

@mixin mq-between($breakpoint) {
  @if $breakpoint == mobile {
    @media screen and (min-width: 0) and (max-width: (map-get($breakpoints, med) - 1)) { @content; }
  } @else if $breakpoint == tablet {
    @media screen and (min-width: map-get($breakpoints, med)) and (max-width: (map-get($breakpoints, lg) - 1)) { @content; }
  }
}


/// Add clearfix to element with floating children
/// ---
/// @author Nicolas Gallagher
/// @link http://nicolasgallagher.com/micro-clearfix-hack/
/// ---
/// @example scss - Usage
///   selector {
///     @include clearfix();
///   }

@mixin clearfix() {
  &:before,
  &:after {
    content: '';
    display: table;
  }

  &:after {
    clear: both;
  }
}


/// Hide element from layout, but keep in DOM
/// ---
/// @author Jonathan Snook
/// @link https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
/// ---
/// @example scss - Usage
///   selector {
///     @include visually-hide();
///   }

@mixin visually-hide() {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px; width: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
}
